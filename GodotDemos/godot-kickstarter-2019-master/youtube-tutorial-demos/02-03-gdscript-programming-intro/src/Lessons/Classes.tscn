[gd_scene load_steps=4 format=2]

[ext_resource path="res://src/theme/gdquest.theme" type="Theme" id=1]
[ext_resource path="res://src/Components/Title.tscn" type="PackedScene" id=2]
[ext_resource path="res://src/Components/text_edit/TextEdit.tscn" type="PackedScene" id=3]

[node name="Classes" type="HBoxContainer"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -960.0
margin_top = -540.0
margin_right = 320.0
margin_bottom = 180.0
rect_min_size = Vector2( 1280, 720 )
theme = ExtResource( 1 )

[node name="BodyPanel" type="Panel" parent="."]
margin_right = 795.0
margin_bottom = 720.0
size_flags_horizontal = 3

[node name="Column" type="VBoxContainer" parent="BodyPanel"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 25.0
margin_top = 20.0
margin_right = -25.0
margin_bottom = -16.0
size_flags_horizontal = 3

[node name="Column" type="VBoxContainer" parent="BodyPanel/Column"]
margin_right = 745.0
margin_bottom = 684.0
size_flags_vertical = 3
size_flags_stretch_ratio = 1.6

[node name="Title" parent="BodyPanel/Column/Column" instance=ExtResource( 2 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 745.0
margin_bottom = 36.0
text = "Classes"

[node name="Label" type="Label" parent="BodyPanel/Column/Column"]
margin_top = 44.0
margin_right = 745.0
margin_bottom = 186.0
size_flags_vertical = 1
text = "You create objects from a blueprint called a class. A class is a list of variables and functions that define an object. In GDScript, every file is implicitly a class.
To create a new class, you create a .gd file and write variables and functions inside of it:"
autowrap = true

[node name="TextEdit" parent="BodyPanel/Column/Column" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 194.0
margin_right = 745.0
margin_bottom = 408.0
rect_min_size = Vector2( 0, 214 )
text = "var max_health : = 100
var health : = max_health

func take_damage(amount:int) -> void:
    health -= amount
    health = max(0, health)

func health(amount:int) -> void:
    health += amount
    health = min(health, max_health)"

[node name="HSeparator" type="HSeparator" parent="BodyPanel/Column/Column"]
margin_top = 416.0
margin_right = 745.0
margin_bottom = 420.0

[node name="Label2" type="Label" parent="BodyPanel/Column/Column"]
margin_top = 428.0
margin_right = 745.0
margin_bottom = 541.0
size_flags_vertical = 1
text = "A class can reuse and build upon another one, be it one that Godot provides for you, like a Sprite, or your own. At the top of your GDScript file, you will use the extend keyword followed by the name of the class to extend."
autowrap = true

[node name="TextEdit2" parent="BodyPanel/Column/Column" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 549.0
margin_right = 745.0
margin_bottom = 581.0
rect_min_size = Vector2( 0, 30 )
text = "extends Sprite"

[node name="Label3" type="Label" parent="BodyPanel/Column/Column"]
margin_top = 589.0
margin_right = 745.0
margin_bottom = 644.0
size_flags_vertical = 1
text = "This gives your class access to all variables and functions from the extended class."
autowrap = true

[node name="NotesPanel" type="Panel" parent="."]
margin_left = 803.0
margin_right = 1280.0
margin_bottom = 720.0
size_flags_horizontal = 3
size_flags_vertical = 3
size_flags_stretch_ratio = 0.6

[node name="Label4" type="Label" parent="NotesPanel"]
modulate = Color( 0.584314, 0.584314, 0.584314, 1 )
margin_left = 29.0
margin_top = 64.0
margin_right = 446.0
margin_bottom = 206.0
size_flags_vertical = 1
text = "For classes and objects, we call variables either member variables or properties, and we say methods instead of functions."
autowrap = true

[node name="Label5" type="Label" parent="NotesPanel"]
modulate = Color( 0.584314, 0.584314, 0.584314, 1 )
margin_left = 29.0
margin_top = 576.0
margin_right = 446.0
margin_bottom = 672.0
size_flags_vertical = 1
text = "In the Godot game editor, press F4 to browse built-in classes and access their reference or documentation."
autowrap = true

